heat_template_version: queens

parameters:
  ssh_key_name:
    type: string
    description: name of ssh key to be provisioned on our server
    default: ""

  octavia_ingress_controller_tag:
    type: string
    description: Octavia ingress controller docker image tag.
    default: "1.13.2-alpha"

  project_id:
    type: string
    description: name of ssh key to be provisioned on our server
    default: ""

  external_network:
    type: string
    description: uuid/name of a network to use for floating ip addresses
    default: public

  fixed_network:
    type: string
    description: uuid/name of an existing network to use to provision machines
    default: ""

  fixed_subnet:
    type: string
    description: uuid/name of an existing subnet to use to provision machines
    default: ""

  server_image:
    type: string
    description: glance image used to boot the server
    default: ""

  master_flavor:
    type: string
    default: m1.small
    description: flavor to use when booting the server for master nodes

  minion_flavor:
    type: string
    default: m1.small
    description: flavor to use when booting the server for minions

  prometheus_monitoring:
    type: boolean
    default: false
    description: >
      whether or not to have the grafana-prometheus-cadvisor monitoring setup

  grafana_admin_passwd:
    type: string
    default: admin
    hidden: true
    description: >
      admin user password for the Grafana monitoring interface

  dns_nameserver:
    type: string
    description: address of a DNS nameserver reachable in your environment
    default: 8.8.8.8

  number_of_masters:
    type: number
    description: how many kubernetes masters to spawn
    default: 1

  number_of_minions:
    type: number
    description: how many kubernetes minions to spawn
    default: 1

  fixed_network_cidr:
    type: string
    description: network range for fixed ip network
    default: 10.0.0.0/24

  portal_network_cidr:
    type: string
    description: >
      address range used by kubernetes for service portals
    default: 10.254.0.0/16

  network_driver:
    type: string
    description: network driver to use for instantiating container networks
    default: flannel

  flannel_network_cidr:
    type: string
    description: network range for flannel overlay network
    default: 10.100.0.0/16

  flannel_network_subnetlen:
    type: number
    description: size of subnet assigned to each minion
    default: 24

  flannel_backend:
    type: string
    description: >
      specify the backend for flannel, default udp backend
    default: "udp"
    constraints:
      - allowed_values: ["udp", "vxlan", "host-gw"]

  system_pods_initial_delay:
    type: number
    description: >
      health check, time to wait for system pods (podmaster, scheduler) to boot
      (in seconds)
    default: 30

  system_pods_timeout:
    type: number
    description: >
      health check, timeout for system pods (podmaster, scheduler) to answer.
      (in seconds)
    default: 5

  admission_control_list:
    type: string
    description: >
      List of admission control plugins to activate
    default: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"

  kube_allow_priv:
    type: string
    description: >
      whether or not kubernetes should permit privileged containers.
    default: "true"
    constraints:
      - allowed_values: ["true", "false"]

  etcd_volume_size:
    type: number
    description: >
      size of the cinder volume for etcd storage
    default: 0

  docker_volume_size:
    type: number
    description: >
      size of a cinder volume to allocate to docker for container/image
      storage
    default: 0

  docker_volume_type:
    type: string
    description: >
      type of a cinder volume to allocate to docker for container/image
      storage
    default: ""

  docker_storage_driver:
    type: string
    description: docker storage driver name
    default: "devicemapper"

  cgroup_driver:
    type: string
    description: >
      cgroup driver name that kubelet should use, ideally the same as
      the docker cgroup driver.
    default: "cgroupfs"

  wait_condition_timeout:
    type: number
    description: >
      timeout for the Wait Conditions
    default: 6000

  minions_to_remove:
    type: comma_delimited_list
    description: >
      List of minions to be removed when doing an update. Individual minion may
      be referenced several ways: (1) The resource name (e.g. ['1', '3']),
      (2) The private IP address ['10.0.0.4', '10.0.0.6']. Note: the list should
      be empty when doing an create.
    default: []

  discovery_url:
    type: string
    description: >
      Discovery URL used for bootstrapping the etcd cluster.
    default: ""

  registry_enabled:
    type: boolean
    description: >
      Indicates whether the docker registry is enabled.
    default: false

  registry_port:
    type: number
    description: port of registry service
    default: 5000

  swift_region:
    type: string
    description: region of swift service
    default: ""

  registry_container:
    type: string
    description: >
      name of swift container which docker registry stores images in
    default: "container"

  registry_insecure:
    type: boolean
    description: >
      indicates whether to skip TLS verification between registry and backend storage
    default: true

  registry_chunksize:
    type: number
    description: >
      size fo the data segments for the swift dynamic large objects
    default: 5242880

  volume_driver:
    type: string
    description: volume driver to use for container storage
    default: ""

  region_name:
    type: string
    description: A logically separate section of the cluster
    default: ""

  username:
    type: string
    description: >
      user account
    default: ""

  password:
    type: string
    description: >
      user password, not set in current implementation, only used to
      fill in for Kubernetes config file
    default:
      ChangeMe
    hidden: true

  loadbalancing_protocol:
    type: string
    description: >
      The protocol which is used for load balancing. If you want to change
      tls_disabled option to 'True', please change this to "HTTP".
    default: TCP
    constraints:
      - allowed_values: ["TCP", "HTTP"]

  tls_disabled:
    type: boolean
    description: whether or not to disable TLS
    default: False

  kube_dashboard_enabled:
    type: boolean
    description: whether or not to enable kubernetes dashboard
    default: True

  influx_grafana_dashboard_enabled:
    type: boolean
    description: Enable influxdb with grafana dashboard for data from heapster
    default: False

  verify_ca:
    type: boolean
    description: whether or not to validate certificate authority
    default: false

  kubernetes_port:
    type: number
    description: >
      The port which are used by kube-apiserver to provide Kubernetes
      service.
    default: 6443

  cluster_uuid:
    type: string
    description: identifier for the cluster this template is generating
    default: ""

  magnum_url:
    type: string
    description: endpoint to retrieve TLS certs from
    default: ""

  http_proxy:
    type: string
    description: http proxy address for docker
    default: ""

  https_proxy:
    type: string
    description: https proxy address for docker
    default: ""

  no_proxy:
    type: string
    description: no proxies for docker
    default: ""

  trustee_domain_id:
    type: string
    description: domain id of the trustee
    default: ""

  trustee_user_id:
    type: string
    description: user id of the trustee
    default: ""

  trustee_username:
    type: string
    description: username of the trustee
    default: ""

  trustee_password:
    type: string
    description: password of the trustee
    default: ""
    hidden: true

  trust_id:
    type: string
    description: id of the trust which is used by the trustee
    default: ""
    hidden: true

  auth_url:
    type: string
    description: url for keystone
    default: ""

  kube_tag:
    type: string
    description: tag of the k8s containers used to provision the kubernetes cluster
    default: v1.11.6

  etcd_tag:
    type: string
    description: tag of the etcd system container
    default: v3.2.7

  flannel_tag:
    type: string
    description: tag of the flannel system containers
    default: v0.10.0-amd64

  kube_version:
    type: string
    description: version of kubernetes used for kubernetes cluster
    default: v1.11.6

  kube_dashboard_version:
    type: string
    description: version of kubernetes dashboard used for kubernetes cluster
    default: v1.8.3

  insecure_registry_url:
    type: string
    description: insecure registry url
    default: ""

  container_infra_prefix:
    type: string
    description: >
      prefix of container images used in the cluster, kubernetes components,
      kubernetes-dashboard, coredns etc
    constraints:
      - allowed_pattern: "^$|.*/"
    default: ""

  dns_service_ip:
    type: string
    description: >
      address used by Kubernetes DNS service
    default: 10.254.0.10

  dns_cluster_domain:
    type: string
    description: >
      domain name for cluster DNS
    default: "cluster.local"

  openstack_ca:
    type: string
    hidden: true
    description: The OpenStack CA certificate to install on the node.
    default: ""

  nodes_affinity_policy:
    type: string
    description: >
      affinity policy for nodes server group
    constraints:
      - allowed_values: ["affinity", "anti-affinity", "soft-affinity",
                         "soft-anti-affinity"]
    default: "affinity"

  availability_zone:
    type: string
    description: >
      availability zone for master and nodes
    default: ""

  cert_manager_api:
    type: boolean
    description: true if the kubernetes cert api manager should be enabled
    default: false

  ca_key:
    type: string
    description: key of internal ca for the kube certificate api manager
    default: ""
    hidden: true

  calico_tag:
    type: string
    description: tag of the calico containers used to provision the calico node
    default: v2.6.7

  calico_cni_tag:
    type: string
    description: tag of the cni used to provision the calico node
    default: v1.11.2

  calico_kube_controllers_tag:
    type: string
    description: tag of the kube_controllers used to provision the calico node
    default: v1.0.3

  calico_ipv4pool:
    type: string
    description: Configure the IP pool from which Pod IPs will be chosen
    default: "192.168.0.0/16"

  pods_network_cidr:
    type: string
    description: Configure the IP pool/range from which pod IPs will be chosen
    default: ""

  ingress_controller:
    type: string
    description: >
      ingress controller backend to use
    default: ""

  ingress_controller_role:
    type: string
    description: >
      node role where the ingress controller backend should run
    default: "ingress"

  kubelet_options:
    type: string
    description: >
      additional options to be passed to the kubelet
    default: ""

  kubeapi_options:
    type: string
    description: >
      additional options to be passed to the api
    default: ""

  kubecontroller_options:
    type: string
    description: >
      additional options to be passed to the controller manager
    default: ""

  kubeproxy_options:
    type: string
    description: >
      additional options to be passed to the kube proxy
    default: ""

  kubescheduler_options:
    type: string
    description: >
      additional options to be passed to the scheduler
    default: ""

  octavia_enabled:
    type: boolean
    description: >
      whether or not to use Octavia for LoadBalancer type service.
    default: False

  kube_service_account_key:
    type: string
    hidden: true
    description: >
      The signed cert will be used to verify the k8s service account tokens
      during authentication.
    default: ""

  kube_service_account_private_key:
    type: string
    hidden: true
    description: >
      The private key will be used to sign generated k8s service account
      tokens.
    default: ""

  cloud_provider_enabled:
    type: boolean
    description: Enable or disable the openstack kubernetes cloud provider
    default: true

  prometheus_tag:
    type: string
    description: tag of the prometheus container
    default: v1.8.2

  grafana_tag:
    type: string
    description: tag of grafana container
    default: 5.1.5

  heat_container_agent_tag:
    type: string
    description: tag of the heat_container_agent system container
    default: stein-dev

  master_ng_uuids:
    type: comma_delimited_list
    label: ng_uuids
  master_ng_count:
    type: number
    label: ng_count

  ng_uuids:
    type: comma_delimited_list
    label: ng_uuids
  ng_count:
    type: number
    label: ng_count
  node_counts:
    type: json
    label: Slave Counts
    description: Number of slaves
    default: {}
  names:
    type: json
    label: names
    default: {}
  image_ids:
    type: json
    label: Image IDs
    description: Image to be used
    default: {}
  flavors:
    type: json
    label: Instance Type
    description: Type of instance (flavor) to deploy
    default: {}
  groups_to_remove:
    type: comma_delimited_list
    label: Groups to remove
    default: []
  nodes_to_remove:
    type: json
    label: nodes to remove
    default: {}
  nodegroup_roles:
    type: json
    label: nodegroup roles
    default: {}
  master_lb_enabled:
    type: boolean
    default: false
  floating_ip_enabled:
    type: boolean
    default: true

  master_lb_floating_ip_enabled:
    type: boolean
    default: true
 
  keystone_auth_enabled:
    type: boolean
    description: >
      true if the keystone authN and authZ should be enabled
    default:
      true

  k8s_keystone_auth_tag:
    type: string
    description: tag of the k8s_keystone_auth container
    default: 1.13.0

  monitoring_enabled:
    type: boolean
    description: Enable or disable prometheus-operator monitoring solution.
    default: false

  project_id:
    type: string
    description: >
      project id of current project

  tiller_enabled:
    type: boolean
    description: Choose whether to install tiller or not.
    default: false

  tiller_tag:
    type: string
    description: tag of tiller container
    default: "v2.12.3"

  tiller_namespace:
    type: string
    description: namespace where tiller will be installed.
    default: "magnum-tiller"

  node_problem_detector_tag:
    type: string
    description: tag of the node problem detector container
    default: v0.6.2

  flannel_cni_tag:
    type: string
    description: tag of the flannel cni container
    default: v0.3.0

  cloud_provider_tag:
    type: string
    description:
      tag of the kubernetes/cloud-provider-openstack
      https://hub.docker.com/r/k8scloudprovider/openstack-cloud-controller-manager/tags/
    default: v0.2.0

  cloud_provider_enabled:
    type: boolean
    description: Enable or disable the openstack kubernetes cloud provider
    default: true

resources:

  ##########################
  #
  # common software configs.
  #
  install_openstack_ca:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config:
        str_replace:
          params:
            $OPENSTACK_CA: {get_param: openstack_ca}
          template: {get_file: ../../common/templates/fragments/atomic-install-openstack-ca.sh}

  disable_selinux:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config: {get_file: ../../common/templates/kubernetes/fragments/disable-selinux.sh}

  write_common_heat_params:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config:
        str_replace:
          template: {get_file: ../scripts/write-common-heat-params.yaml}
          params:
            "$CGROUP_DRIVER": {get_param: cgroup_driver}
            "$NETWORK_DRIVER": {get_param: network_driver}
            "$TLS_DISABLED": {get_param: tls_disabled}
            "$VERIFY_CA": {get_param: verify_ca}
            "$CLUSTER_UUID": {get_param: cluster_uuid}
            "$MAGNUM_URL": {get_param: magnum_url}
            "$AUTH_URL": {get_param: auth_url}
            "$REGION_NAME": {get_param: region_name}
            "$HTTP_PROXY": {get_param: http_proxy}
            "$HTTPS_PROXY": {get_param: https_proxy}
            "$NO_PROXY": {get_param: no_proxy}
            "$KUBE_TAG": {get_param: kube_tag}
            "$PODS_NETWORK_CIDR": {get_param: pods_network_cidr}
            "$PORTAL_NETWORK_CIDR": {get_param: portal_network_cidr}
            "$TRUSTEE_USER_ID": {get_param: trustee_user_id}
            "$TRUSTEE_PASSWORD": {get_param: trustee_password}
            "$TRUST_ID": {get_param: trust_id}
            "$CLOUD_PROVIDER_ENABLED": {get_param: cloud_provider_enabled}
            "$INSECURE_REGISTRY_URL": {get_param: insecure_registry_url}
            "$CONTAINER_INFRA_PREFIX": {get_param: container_infra_prefix}
            "$DNS_SERVICE_IP": {get_param: dns_service_ip}
            "$DNS_CLUSTER_DOMAIN": {get_param: dns_cluster_domain}
            "$KUBELET_OPTIONS": {get_param: kubelet_options}
            "$KUBEPROXY_OPTIONS": {get_param: kubeproxy_options}
            "$HEAT_CONTAINER_AGENT_TAG": {get_param: heat_container_agent_tag}

  start_container_agent:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config: {get_file: ../../common/templates/kubernetes/fragments/start-container-agent.sh}

  node_software_configs:
    type: OS::Heat::MultipartMime
    properties:
      parts:
        - config: {get_resource: install_openstack_ca}
        - config: {get_resource: disable_selinux}
        - config: {get_resource: write_common_heat_params}
        - config: {get_resource: start_container_agent}

  ######################################################################
  #
  # node software configs passed to the node as software deployment.
  #
  node_common_deployment:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config:
        list_join:
          - "\n"
          -
            - get_file: ../scripts/make-cert-client.sh
            - get_file: ../../common/templates/kubernetes/fragments/write-kube-os-config.sh
            - get_file: ../../common/templates/kubernetes/fragments/add-proxy.sh
            - get_file: ../scripts/install-kubernetes-node.sh

  ######################################################################
  #
  # configure kubernetes on the node
  #
  node_configure_kubernetes:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config:
        str_replace:
          template: {get_file: ../scripts/configure-kubernetes.sh}
          params:
            "$KUBE_MASTER_IP": {get_attr: [nodegroups, master_ips, 0]}
            "$KUBE_API_PORT": {get_param: kubernetes_port}

  node_kubernetes_deployment:
    type: OS::Heat::SoftwareDeploymentGroup
    properties:
      actions: ['CREATE']
      signal_transport: HEAT_SIGNAL
      config:
        get_resource: node_configure_kubernetes
      servers: {get_attr: [nodegroups, server_ids_map]}

  network:
    type: network.yaml
    properties:
      stack_name: {get_param: 'OS::stack_name'}
      fixed_network: {get_param: fixed_network}
      fixed_subnet: {get_param: fixed_subnet}
      fixed_network_cidr: {get_param: fixed_network_cidr}
      dns_nameserver: {get_param: dns_nameserver}
      external_network: {get_param: external_network}
      loadbalancing_protocol: {get_param: loadbalancing_protocol}
      kubernetes_port: {get_param: kubernetes_port}
      master_lb_enabled: {get_param: master_lb_enabled}
      octavia_enabled: {get_param: octavia_enabled}
      master_lb_floating_ip_enabled: {get_param: master_lb_floating_ip_enabled}

  kube_master_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config:
       list_join:
         - "\n"
         -
           - str_replace:
               template: { get_file: ../scripts/configure-etcd.sh }
               params:
                 "${ETCD_TAG}": {get_param: etcd_tag}
           - str_replace:
               template: { get_file: ../scripts/make-cert.sh }
               params:
                 "${KUBE_SERVICE_ACCOUNT_KEY}": {get_param: kube_service_account_key}
                 "${KUBE_SERVICE_ACCOUNT_PRIVATE_KEY}": {get_param: kube_service_account_private_key}
           - str_replace:
               template: { get_file: ../scripts/configure-kubernetes-master.sh }
               params:
                 "$KUBE_API_PORT": {get_param: kubernetes_port}
                 "$KUBE_ALLOW_PRIV": {get_param: kube_allow_priv}
           - get_file: ../scripts/enable-services-master.sh

  kube_master_deploy:
    type: OS::Heat::SoftwareDeploymentGroup
    depends_on:
      - node_kubernetes_deployment
    properties:
      actions: ['CREATE']
      signal_transport: HEAT_SIGNAL
      config:
        get_resource: kube_master_config
      servers: {get_attr: [nodegroups, master_ids_map]}

  kube_cluster_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config:
       list_join:
         - "\n"
         -
           - str_replace:
               template: {get_file: ../scripts/write-heat-params-master.sh}
               params:
                 "$PROMETHEUS_MONITORING": {get_param: prometheus_monitoring}
                 #"$KUBE_API_PUBLIC_ADDRESS": {get_attr: [api_address_switch, public_ip]}
                 #"$KUBE_API_PRIVATE_ADDRESS": {get_attr: [api_address_switch, private_ip]}
                 "$KUBE_API_PORT": {get_param: kubernetes_port}
                 #"$KUBE_NODE_PUBLIC_IP": {get_attr: [kube_master_floating, floating_ip_address]}
                 #"$KUBE_NODE_IP": {get_attr: [kube_master_eth0, fixed_ips, 0, ip_address]}
                 #"$KUBE_ALLOW_PRIV": {get_param: kube_allow_priv}
                 #"$ETCD_VOLUME": {get_resource: etcd_volume}
                 #"$ETCD_VOLUME_SIZE": {get_param: etcd_volume_size}
                 #"$DOCKER_VOLUME": {get_resource: docker_volume}
                 #"$DOCKER_VOLUME_SIZE": {get_param: docker_volume_size}
                 #"$DOCKER_STORAGE_DRIVER": {get_param: docker_storage_driver}
                 "$CGROUP_DRIVER": {get_param: cgroup_driver}
                 "$NETWORK_DRIVER": {get_param: network_driver}
                 "$FLANNEL_NETWORK_CIDR": {get_param: flannel_network_cidr}
                 "$FLANNEL_NETWORK_SUBNETLEN": {get_param: flannel_network_subnetlen}
                 "$FLANNEL_BACKEND": {get_param: flannel_backend}
                 "$SYSTEM_PODS_INITIAL_DELAY": {get_param: system_pods_initial_delay}
                 "$SYSTEM_PODS_TIMEOUT": {get_param: system_pods_timeout}
                 "$PODS_NETWORK_CIDR": {get_param: pods_network_cidr}
                 "$PORTAL_NETWORK_CIDR": {get_param: portal_network_cidr}
                 "$ADMISSION_CONTROL_LIST": {get_param: admission_control_list}
                 #"$ETCD_DISCOVERY_URL": {get_param: discovery_url}
                 "$AUTH_URL": {get_param: auth_url}
                 "$USERNAME": {get_param: username}
                 "$PASSWORD": {get_param: password}
                 "$CLUSTER_SUBNET": {get_param: fixed_subnet}
                 "$TLS_DISABLED": {get_param: tls_disabled}
                 "$KUBE_DASHBOARD_ENABLED": {get_param: kube_dashboard_enabled}
                 "$INFLUX_GRAFANA_DASHBOARD_ENABLED": {get_param: influx_grafana_dashboard_enabled}
                 "$VERIFY_CA": {get_param: verify_ca}
                 "$CLUSTER_UUID": {get_param: cluster_uuid}
                 "$MAGNUM_URL": {get_param: magnum_url}
                 "$VOLUME_DRIVER": {get_param: volume_driver}
                 "$REGION_NAME": {get_param: region_name}
                 "$HTTP_PROXY": {get_param: http_proxy}
                 "$HTTPS_PROXY": {get_param: https_proxy}
                 "$NO_PROXY": {get_param: no_proxy}
                 "$KUBE_TAG": {get_param: kube_tag}
                 "$CLOUD_PROVIDER_TAG": {get_param: cloud_provider_tag}
                 "$CLOUD_PROVIDER_ENABLED": {get_param: cloud_provider_enabled}
                 "$ETCD_TAG": {get_param: etcd_tag}
                 "$FLANNEL_TAG": {get_param: flannel_tag}
                 "$FLANNEL_CNI_TAG": {get_param: flannel_cni_tag}
                 "$KUBE_VERSION": {get_param: kube_version}
                 "$KUBE_DASHBOARD_VERSION": {get_param: kube_dashboard_version}
                 "$TRUSTEE_USER_ID": {get_param: trustee_user_id}
                 "$TRUSTEE_PASSWORD": {get_param: trustee_password}
                 "$TRUST_ID": {get_param: trust_id}
                 "$INSECURE_REGISTRY_URL": {get_param: insecure_registry_url}
                 "$CONTAINER_INFRA_PREFIX": {get_param: container_infra_prefix}
                 #"$ETCD_LB_VIP": {get_param: etcd_lb_vip}
                 "$DNS_SERVICE_IP": {get_param: dns_service_ip}
                 "$DNS_CLUSTER_DOMAIN": {get_param: dns_cluster_domain}
                 "$CERT_MANAGER_API": {get_param: cert_manager_api}
                 "$CA_KEY": {get_param: ca_key}
                 "$CALICO_TAG": {get_param: calico_tag}
                 "$CALICO_CNI_TAG": {get_param: calico_cni_tag}
                 "$CALICO_KUBE_CONTROLLERS_TAG": {get_param: calico_kube_controllers_tag}
                 "$CALICO_IPV4POOL": {get_param: calico_ipv4pool}
                 "$INGRESS_CONTROLLER": {get_param: ingress_controller}
                 "$INGRESS_CONTROLLER_ROLE": {get_param: ingress_controller_role}
                 "$OCTAVIA_INGRESS_CONTROLLER_TAG": {get_param: octavia_ingress_controller_tag}
                 "$KUBELET_OPTIONS": {get_param: kubelet_options}
                 "$KUBEAPI_OPTIONS": {get_param: kubeapi_options}
                 "$KUBECONTROLLER_OPTIONS": {get_param: kubecontroller_options}
                 "$KUBEPROXY_OPTIONS": {get_param: kubeproxy_options}
                 "$KUBESCHEDULER_OPTIONS": {get_param: kubescheduler_options}
                 "$OCTAVIA_ENABLED": {get_param: octavia_enabled}
                 "$KUBE_SERVICE_ACCOUNT_KEY": {get_param: kube_service_account_key}
                 "$KUBE_SERVICE_ACCOUNT_PRIVATE_KEY": {get_param: kube_service_account_private_key}
                 "$PROMETHEUS_TAG": {get_param: prometheus_tag}
                 "$GRAFANA_TAG": {get_param: grafana_tag}
                 "$HEAT_CONTAINER_AGENT_TAG": {get_param: heat_container_agent_tag}
                 "$KEYSTONE_AUTH_ENABLED": {get_param: keystone_auth_enabled}
                 "$K8S_KEYSTONE_AUTH_TAG": {get_param: k8s_keystone_auth_tag}
                 "$MONITORING_ENABLED": {get_param: monitoring_enabled}
                 "$PROJECT_ID": {get_param: project_id}
                 "$EXTERNAL_NETWORK_ID": {get_param: external_network}
                 "$TILLER_ENABLED": {get_param: tiller_enabled}
                 "$TILLER_TAG": {get_param: tiller_tag}
                 "$TILLER_NAMESPACE": {get_param: tiller_namespace}
                 "$NODE_PROBLEM_DETECTOR_TAG": {get_param: node_problem_detector_tag}
           - str_replace:
               template: {get_file: ../../common/templates/kubernetes/fragments/enable-cert-api-manager.sh}
               params:
                 "$CA_KEY": {get_param: ca_key}
           #- get_file: ../../common/templates/kubernetes/fragments/kube-apiserver-to-kubelet-role.sh
           #- get_file: ../../common/templates/kubernetes/fragments/core-dns-service.sh
           #- str_replace:
           #    template: {get_file: ../../common/templates/kubernetes/fragments/enable-prometheus-monitoring.sh}
           #    params:
           #      "$ADMIN_PASSWD": {get_param: grafana_admin_passwd}
           #- get_file: ../../common/templates/kubernetes/fragments/calico-service.sh
           #- get_file: ../../common/templates/kubernetes/fragments/flannel-service.sh
           #- str_replace:
           #    params:
           #      $enable-ingress-traefik: {get_file: ../../common/templates/kubernetes/fragments/enable-ingress-traefik.sh}
           #    template: {get_file: ../../common/templates/kubernetes/fragments/enable-ingress-controller.sh}
           #- get_file: ../../common/templates/kubernetes/fragments/kube-dashboard-service.sh
           - get_file: ../../common/templates/kubernetes/fragments/kube-apiserver-to-kubelet-role.sh
           - get_file: ../../common/templates/kubernetes/fragments/core-dns-service.sh
           - get_file: ../../common/templates/kubernetes/fragments/calico-service.sh
           - get_file: ../../common/templates/kubernetes/fragments/flannel-service.sh
           - get_file: ../../common/templates/kubernetes/fragments/enable-helm-tiller.sh
           - str_replace:
               template: {get_file: ../../common/templates/kubernetes/fragments/enable-prometheus-monitoring.sh}
               params:
                 "$ADMIN_PASSWD": {get_param: grafana_admin_passwd}
           - str_replace:
               params:
                 $enable-ingress-traefik: {get_file: ../../common/templates/kubernetes/fragments/enable-ingress-traefik.sh}
                 $enable-ingress-octavia: {get_file: ../../common/templates/kubernetes/fragments/enable-ingress-octavia.sh}
               template: {get_file: ../../common/templates/kubernetes/fragments/enable-ingress-controller.sh}
           - get_file: ../../common/templates/kubernetes/fragments/kube-dashboard-service.sh
           - get_file: ../../common/templates/kubernetes/fragments/enable-keystone-auth.sh
           - get_file: ../../common/templates/kubernetes/fragments/enable-auto-healing.sh
           # Helm Based Installation Configuration Scripts
           - get_file: ../../common/templates/kubernetes/helm/metrics-server.sh
           - str_replace:
               template: {get_file:  ../../common/templates/kubernetes/helm/prometheus-operator.sh}
               params:
                 "${ADMIN_PASSWD}": {get_param: grafana_admin_passwd}
           - get_file: ../../common/templates/kubernetes/fragments/install-helm-modules.sh

  kube_cluster_deploy:
    type: OS::Heat::SoftwareDeployment
    depends_on:
      - kube_master_deploy
    properties:
      actions: ['CREATE']
      signal_transport: HEAT_SIGNAL
      config:
       get_resource: kube_cluster_config
      server: { get_attr: [nodegroups, master_ids, 0] }


  nodegroups:
    type: middle.yaml
    depends_on:
      - network
    properties:
      master_ng_count: {get_param: master_ng_count}
      ng_count: {get_param: ng_count}
      master_ng_uuids: { get_param: master_ng_uuids}
      ng_uuids: {get_param: ng_uuids}
      slave_counts: {get_param: node_counts}
      key_name: { get_param: ssh_key_name }
      image_ids: { get_param: image_ids }
      flavors: { get_param: flavors }
      names: { get_param: names }
      groups_to_remove : { get_param: groups_to_remove }
      nodes_to_remove : { get_param: nodes_to_remove }
      nodegroup_roles : { get_param: nodegroup_roles }
      master_sec_group: { get_resource: secgroup_kube_master }
      worker_sec_group: { get_resource: secgroup_kube_worker }
      master_lb_enabled: { get_param: master_lb_enabled }
      floating_ip_enabled: { get_param: floating_ip_enabled }
      external_network: { get_param: external_network }
      api_pool_id: {get_attr: [network, pool_id]}
      fixed_network: {get_attr: [network, fixed_network]}
      fixed_subnet: {get_attr: [network, fixed_subnet]}
      node_software_configs: {get_resource: node_software_configs}
      node_common_deployment: {get_resource: node_common_deployment}
      octavia_enabled: {get_param: octavia_enabled}
      
  secgroup_kube_master:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - protocol: tcp
          port_range_min: 7080
          port_range_max: 7080
        - protocol: tcp
          port_range_min: 8080
          port_range_max: 8080
        - protocol: tcp
          port_range_min: 2379
          port_range_max: 2379
        - protocol: tcp
          port_range_min: 2380
          port_range_max: 2380
        - protocol: tcp
          port_range_min: 6443
          port_range_max: 6443
        - protocol: tcp
          port_range_min: 10250
          port_range_max: 10250
        - protocol: tcp
          port_range_min: 30000
          port_range_max: 32767
        - protocol: udp
          port_range_min: 8472
          port_range_max: 8472

  secgroup_kube_worker:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - protocol: icmp
        - protocol: tcp
        - protocol: udp

outputs:
  #worker_ngs:
  #  value: { get_attr: [ ngs_resources, ngs  ] }
  worker_ngs:
    value: { get_attr: [ nodegroups, worker_ngs  ] }
  master_ngs:
    value: { get_attr: [ nodegroups, master_ngs  ] }

  ng_node_ips:
    value:
      map_merge:
      - map_merge: {get_attr: [ nodegroups, worker_ngs ]}
      - map_merge: {get_attr: [ nodegroups, master_ngs ]}
  #server_ips:
  #  value:
  #    list_concat:
  #      - list_concat: { get_attr: [master_ngs, node_ips] }
  #      - list_concat: { get_attr: [ngs_resources, node_ips] }
  server_ips:
    value: {get_attr: [nodegroups, server_ips]}

  #server_ids:
  #  value:
  #    list_concat:
  #    - list_concat: { get_attr: [ master_ngs, server_ids ] }
  #    - list_concat: { get_attr: [ ngs_resources, server_ids ] }
  server_ids:
    value: {get_attr: [nodegroups, server_ids_map]}

  #server_ids_map:
  #  value:
  #    map_merge:
  #    - map_merge: { get_attr: [ master_ngs, node_id_map ] }
  #    - map_merge: { get_attr: [ ngs_resources, node_id_map ] }
  server_ids_map:
    value: {get_attr: [nodegroups, server_ids_map]}

  #check:
  #  value: { get_attr: [ ngs_resources, node_id_map ] }
  check:
    value: { get_attr: [ nodegroups, node_id_map ] }

  master_ips:
    value: {get_attr: [nodegroups, master_ips]}

  worker_ips:
    value: {get_attr: [nodegroups, worker_ips]}

  api_address:
    value: {get_attr: [nodegroups, master_ips, 0]}
    description: >
      This is the API endpoint of the Kubernetes cluster. Use this to access
      the Kubernetes API.
