heat_template_version: queens

parameters:
  master_ng_count:
    type: number
    label: ng_count

  ng_count:
    type: number
    label: ng_count
  
  master_ng_uuids:
    type: comma_delimited_list
    label: ng_uuids

  ng_uuids:
    type: comma_delimited_list
    label: ng_uuids

  slave_counts:
    type: json
    label: Slave Counts
    description: Number of slaves
    default: {}

  key_name:
    type: string

  image_ids:
    type: json
    label: Image IDs
    description: Image to be used

  flavors:
    type: json
    label: Instance Type
    description: Type of instance (flavor) to deploy

  names:
    type: json
    label: names

  groups_to_remove :
    type: comma_delimited_list
    label: Groups to remove

  nodes_to_remove :
    type: json
    label: nodes to remove
  nodegroup_roles :
    type: json
    label: nodes to remove
  master_sec_group:
    type: string
  worker_sec_group:
    type: string
  master_lb_enabled:
    type: boolean
  floating_ip_enabled:
    type: boolean
  external_network:
    type: string
  api_pool_id:
    type: string
  fixed_network:
    type: string
  fixed_subnet:
    type: string
  node_software_configs:
    type: string
  node_common_deployment:
    type: string
  octavia_enabled:
    type: boolean

resources:

  master_ngs:
    type: OS::Heat::ResourceGroup
    properties:
      count: {get_param: master_ng_count}
      removal_policies: [{resource_list:{get_param: groups_to_remove}}]
      removal_policies_mode: update
      resource_def:
        type: nodegroups.yaml
        properties:
          uuids: { get_param: master_ng_uuids}
          ind: "%index%"
          slave_counts: { get_param: slave_counts }
          key_name: { get_param: key_name }
          image_ids: { get_param: image_ids }
          flavors: { get_param: flavors }
          names: { get_param: names }
          groups_to_remove : { get_param: groups_to_remove }
          nodes_to_remove : { get_param: nodes_to_remove }
          nodegroup_roles : { get_param: nodegroup_roles }
          master_sec_group: { get_param: master_sec_group }
          worker_sec_group: { get_param: worker_sec_group }
          master_lb_enabled: { get_param: master_lb_enabled }
          floating_ip_enabled: { get_param: floating_ip_enabled }
          external_network: { get_param: external_network }
          api_pool_id: {get_param: api_pool_id}
          fixed_network: {get_param: fixed_network}
          fixed_subnet: {get_param: fixed_subnet}
          node_software_configs: {get_param: node_software_configs}
          node_common_deployment: {get_param: node_common_deployment}
          octavia_enabled: {get_param: octavia_enabled}

  worker_ngs:
    type: OS::Heat::ResourceGroup
    properties:
      count: {get_param: ng_count}
      removal_policies: [{resource_list:{get_param: groups_to_remove}}]
      removal_policies_mode: update
      resource_def:
        type: nodegroups.yaml
        properties:
          uuids: { get_param: ng_uuids}
          ind: "%index%"
          slave_counts: { get_param: slave_counts }
          key_name: { get_param: key_name }
          image_ids: { get_param: image_ids }
          flavors: { get_param: flavors }
          names: { get_param: names }
          groups_to_remove : { get_param: groups_to_remove }
          nodes_to_remove : { get_param: nodes_to_remove }
          nodegroup_roles : { get_param: nodegroup_roles }
          master_sec_group: { get_param: master_sec_group }
          worker_sec_group: { get_param: worker_sec_group }
          master_lb_enabled: { get_param: master_lb_enabled }
          floating_ip_enabled: { get_param: floating_ip_enabled }
          external_network: { get_param: external_network }
          fixed_network: {get_param: fixed_network}
          fixed_subnet: {get_param: fixed_subnet}
          node_software_configs: {get_param: node_software_configs}
          node_common_deployment: {get_param: node_common_deployment}
          octavia_enabled: {get_param: octavia_enabled}

outputs: 
  
  server_ids_map:
    value:
      map_merge:
      - map_merge: { get_attr: [ master_ngs, node_id_map ] }
      - map_merge: { get_attr: [ worker_ngs, node_id_map ] }

  master_ids_map:
    value:
      map_merge: { get_attr: [ master_ngs, node_id_map ] }

  node_id_map:
    value: {get_attr: [worker_ngs, node_id_map]}

  server_ips:
    value:
      list_concat:
        - list_concat: { get_attr: [master_ngs, node_ips] }
        - list_concat: { get_attr: [worker_ngs, node_ips] }

  worker_ngs:
    value: { get_attr: [ worker_ngs, ngs  ] }

  master_ngs:
    value: { get_attr: [ master_ngs, ngs  ] }

  master_ips:
    value: 
      list_concat:
      - list_concat: {get_attr: [master_ngs, node_ips]}

  worker_ips:
    value:
      list_concat:
      - list_concat: {get_attr: [worker_ngs, node_ips]}

  master_ids:
    value: 
      list_concat:
      - list_concat: {get_attr: [master_ngs, server_ids]}

  worker_ids:
    value: 
      list_concat:
      - list_concat: {get_attr: [worker_ngs, server_ids]}
